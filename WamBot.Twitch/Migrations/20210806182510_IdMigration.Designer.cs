// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WamBot.Twitch.Data;

namespace WamBot.Twitch.Migrations
{
    [DbContext(typeof(BotDbContext))]
    [Migration("20210806182510_IdMigration")]
    partial class IdMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:CollationDefinition:twitch_name", "en-u-ks-primary,en-u-ks-primary,icu,False")
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("WamBot.Twitch.Data.DbChannel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("LastStreamId")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .UseCollation("twitch_name");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.ToTable("DbChannels");
                });

            modelBuilder.Entity("WamBot.Twitch.Data.DbChannelUser", b =>
                {
                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<long>("ChannelId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Balance")
                        .HasColumnType("numeric");

                    b.Property<string>("LastStreamId")
                        .HasColumnType("text");

                    b.HasKey("UserId", "ChannelId");

                    b.HasIndex("ChannelId");

                    b.ToTable("DbChannelUsers");
                });

            modelBuilder.Entity("WamBot.Twitch.Data.DbUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("AllTimeConsecutiveLosses")
                        .HasColumnType("integer");

                    b.Property<int>("AllTimeConsecutiveWins")
                        .HasColumnType("integer");

                    b.Property<int>("ConsecutiveLosses")
                        .HasColumnType("integer");

                    b.Property<int>("ConsecutiveWins")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .UseCollation("twitch_name");

                    b.Property<long>("OnyxPoints")
                        .HasColumnType("bigint");

                    b.Property<int>("PenisOffset")
                        .HasColumnType("integer");

                    b.Property<int>("PenisType")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.ToTable("DbUsers");
                });

            modelBuilder.Entity("WamBot.Twitch.Data.DbChannelUser", b =>
                {
                    b.HasOne("WamBot.Twitch.Data.DbChannel", "DbChannel")
                        .WithMany("DbChannelUsers")
                        .HasForeignKey("ChannelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WamBot.Twitch.Data.DbUser", "DbUser")
                        .WithMany("DbChannelUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DbChannel");

                    b.Navigation("DbUser");
                });

            modelBuilder.Entity("WamBot.Twitch.Data.DbChannel", b =>
                {
                    b.Navigation("DbChannelUsers");
                });

            modelBuilder.Entity("WamBot.Twitch.Data.DbUser", b =>
                {
                    b.Navigation("DbChannelUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
